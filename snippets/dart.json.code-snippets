{
	"Part statement": {
		"prefix": "pts",
		"body": [
			"part '${TM_FILENAME_BASE}.g.dart';",
		],
		"description": "Creates a filled-in part statement"
	},
	"Part 'Freezed' statement": {
		"prefix": "ptf",
		"body": [
			"part '${TM_FILENAME_BASE}.freezed.dart';",
		],
		"description": "Creates a filled-in freezed part statement"
	},
	"Freezed Data Class": {
		"prefix": "fdataclass",
		"body": [
			"@freezed",
			"abstract class ${1:DataClass} with _$${1:DataClass}{",
			"  const factory ${1:DataClass}(${2}) = _${1:DataClass};",
			"}"
		],
		"description": "Freezed Data Class"
	},
	"Freezed Data Class With Json": {
		"prefix": "fjson",
		"body": [
			"@freezed",
			"abstract class ${1:DataClass} with _$${1:DataClass}{",
			"  const factory ${1:DataClass}({${2}}) = _${1:DataClass};",
			"  factory ${1:DataClass}.fromJson(Map<String, dynamic> json) => _$${1:DataClass}FromJson(json);",
			"}"
		],
		"description": "Freezed Data Class"
	},
	"Freezed Union": {
		"prefix": "funion",
		"body": [
			"@immutable",
			"abstract class ${1:Union} with _$${1:Union}{",
			"  const factory ${1:Union}.${2}(${4}) = ${3};",
			"}"
		],
		"description": "Freezed Union"
	},
	"Freezed Union Case": {
		"prefix": "funioncase",
		"body": [
			"const factory ${1:Union}.${2}(${4}) = ${3};"
		],
		"description": "Freezed Union Case"
	},
	"Add WidgetView to an existing Widget": {
		"prefix": "aw",
		"body": [
			"class ${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}View extends WidgetView<${4:T1}, ${5:T2}>{",
			"  const ${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}View (${5:T2} state, {Key key}) : super(state, key: key);",
			"  Widget build(BuildContext build){",
			"    return ${6:}",
			"  }",
			"}"
		],
		"description": "Add WidgetView to an existing Widget"
	},
	"New Controller + View": {
		"prefix": "cw",
		"body": [
			"class ${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g} extends StatefulWidget {",
			"",
			"  @override",
			"  _${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}Controller createState() => _${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}Controller();",
			"}",
			"",
			"class _${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}Controller extends State<${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}> {",
			"",
			"  @override",
			"  Widget build(BuildContext context) => _${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}View(this);",
			"}",
			"",
			"class _${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}View extends WidgetView<${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}, _${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}Controller> {",
			"  _${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}View(_${TM_FILENAME_BASE/((^[a-z])|_([a-z]))/${2:/upcase}${3:/upcase}/g}Controller state) : super(state);",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return Container(${2:});",
			"  }",
			"}"
		],
		"description": "New Controller + View"
	},
}